# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*.py-e
*$py.class
.j2cache/
*.log
*.pickle

# pyavd ignores
/python-avd/build/
/python-avd/dist/
/python-avd/vendor/
/python-avd/pyavd.egg-info/
/python-avd/.tox/
/python-avd/.coverage
/python-avd/.mypy_cache/
# Ignore cloned cloudvision-python repo created during generation of _cv/api
/python-avd/pyavd/_cv/cloudvision-apis/

# top level installers
/*.tar.gz
## Ansible galaxy-importer
/importer_result.json
## ansible-builder
/_build

# mkdocs
/site

# ansible_collections/arista/avd/tests ignores
ansible_collections/arista/avd/tests/.mypy_cache/

# ansible-lint ignores
ansible_collections/arista/avd/.ansible

# Development
## pyenv
.python-version
## .vscode/*
.vscode/launch.json
*/.vscode/*
**/.vscode/*

# OSX
*.DS_Store

# Checksum of schemas
*schema.sha1

# Temporary files creating during CI workflow
/tmp-requirements-minimum.txt

# Hash files created when running pyavd from source
python-avd/pyavd/*/j2templates/.hash
python-avd/pyavd/*/schema/schema_fragments/.hash

# Rust
# TODO decide on Cargo.lock
# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock
# next Cargo.toml is generated when building using python -m build
pyavd-utils/Cargo.toml
# Generated by Cargo
# will have compiled files and executables
target/
debug/
# These are backup files generated by rustfmt
**/*.rs.bk
# pyavd-utils ignores
/pyavd-utils/build/
/pyavd-utils/dist/
/pyavd-utils/pyavd_utils.egg-info/
